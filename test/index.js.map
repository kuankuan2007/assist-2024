{
  "version": 3,
  "sources": ["../src/ObjectControl.ts", "../src/KJSON.ts", "index.ts"],
  "sourcesContent": ["export const specialObjectCompare: ((value1: unknown, value2: unknown) => boolean | null)[] = [\r\n  (value1, value2) => {\r\n    if (value1 instanceof Date && value2 instanceof Date) {\r\n      return value1.getTime() === value2.getTime();\r\n    }\r\n    return null;\r\n  },\r\n  (value1, value2) => {\r\n    if (value1 instanceof Set && value2 instanceof Set) {\r\n      if (value1.size !== value2.size) return false;\r\n      for (const i of value1) {\r\n        if (!value2.has(i)) return false;\r\n      }\r\n      return true;\r\n    }\r\n    return null;\r\n  },\r\n  (value1, value2) => {\r\n    if (Number.isNaN(value1) && Number.isNaN(value2)) return true;\r\n    return null;\r\n  }\r\n];\r\nexport const specialObjectClone: ((value: unknown) => unknown | null)[] = [\r\n  (value) => {\r\n    if (value instanceof Date) {\r\n      return new Date(value.getTime());\r\n    }\r\n    return null;\r\n  },\r\n  (value) => {\r\n    if (value instanceof Set) {\r\n      return new Set(value);\r\n    }\r\n    return null;\r\n  },\r\n];\r\nexport function isEqual(value1: unknown, value2: unknown, recursion: boolean = true): boolean {\r\n  if (value1 === value2) return true;\r\n  if (typeof value1 === 'object' && typeof value2 === 'object') {\r\n    if (value1 === null || value2 === null) return false;\r\n    for (const i of ObjectControl.specialObjectCompare) {\r\n      const result = i(value1, value2);\r\n      if (result !== null) {\r\n        return result;\r\n      }\r\n    }\r\n    if (recursion) {\r\n      if (Array.isArray(value1) && Array.isArray(value2)) {\r\n        if (value1.length !== value2.length) return false;\r\n        for (let i = 0; i < value1.length; i++) {\r\n          if (!ObjectControl.isEqual(value1[i], value2[i], recursion)) return false;\r\n        }\r\n        return true;\r\n      } else {\r\n        if (Object.getPrototypeOf(value1) !== Object.getPrototypeOf(value2)) return false;\r\n        if (\r\n          !ObjectControl.isEqual(\r\n            ObjectControl.getOwnProperties(value1),\r\n            ObjectControl.getOwnProperties(value2),\r\n            false\r\n          )\r\n        )\r\n          return false;\r\n        for (const i of ObjectControl.getOwnProperties(value1)) {\r\n          if (!ObjectControl.isEqual(value1[i], value2[i], true)) return false;\r\n        }\r\n        return true;\r\n      }\r\n    } else {\r\n      return false;\r\n    }\r\n  } else {\r\n    if (Number.isNaN(value1) && Number.isNaN(value2)) return true;\r\n    return value1 === value2;\r\n  }\r\n}\r\nexport function clone<T>(\r\n  value: T,\r\n  recursion: boolean = true,\r\n  map: WeakMap<object, unknown> = new WeakMap()\r\n): T {\r\n  if (value instanceof Object) {\r\n    if (map.has(value)) return map.get(value) as T;\r\n    for (const i of ObjectControl.specialObjectClone) {\r\n      const result = i(value);\r\n      if (result !== null) {\r\n        map.set(value, result);\r\n        return result as T;\r\n      }\r\n    }\r\n    if (recursion) {\r\n      if (Array.isArray(value)) {\r\n        const result:unknown[] = [];\r\n        map.set(value, result);\r\n        for (let i = 0; i < value.length; i++) {\r\n          result[i] = ObjectControl.clone(value[i], recursion, map);\r\n        }\r\n        return result as T;\r\n      } else {\r\n        const result: Record<string|symbol, unknown> = {};\r\n        map.set(value, result);\r\n        for (const i of ObjectControl.getOwnProperties(value)) {\r\n          result[i as keyof typeof result] = ObjectControl.clone(value[i as keyof T], recursion, map);\r\n        }\r\n        return result as T;\r\n      }\r\n    } else {\r\n      console.warn('ObjectControl cannot clone non-recursive object');\r\n      return value;\r\n    }\r\n  } else {\r\n    return value;\r\n  }\r\n}\r\nexport function getOwnProperties<T extends object>(value: T): Set<keyof T> {\r\n  return new Set([\r\n    ...Object.getOwnPropertyNames(value),\r\n    ...Object.getOwnPropertySymbols(value),\r\n  ]) as Set<keyof T>;\r\n}\r\nconst ObjectControl = {\r\n  isEqual,\r\n  clone,\r\n  getOwnProperties,\r\n  specialObjectCompare,\r\n  specialObjectClone,\r\n} as const;\r\nexport default ObjectControl;\r\n", "import ObjectControl from './ObjectControl';\r\n\r\nconst specialValues: {\r\n  name: string;\r\n  matcher: (\r\n    target: unknown,\r\n    saveList: unknown[],\r\n    dataMap: unknown[],\r\n    dfsTransform: (obj: unknown) => unknown,\r\n    limitingDraft: boolean\r\n  ) => undefined | string;\r\n  replacer: (value: string, saveList: unknown[]) => unknown;\r\n}[] = [\r\n  {\r\n    name: 'date',\r\n    matcher: (target) => (target instanceof Date ? target.getTime().toString() : void 0),\r\n    replacer: (value) => new Date(Number(value)),\r\n  },\r\n  {\r\n    name: 'nan',\r\n    matcher: (target) => (Number.isNaN(target as number) ? '' : void 0),\r\n    replacer: () => NaN,\r\n  },\r\n  {\r\n    name: 'null',\r\n    matcher: (target) => (target === null ? '' : void 0),\r\n    replacer: () => null,\r\n  },\r\n  {\r\n    name: 'string',\r\n    matcher: (target) => (typeof target === 'string' ? target : void 0),\r\n    replacer: (value) => value,\r\n  },\r\n  {\r\n    name: 'array',\r\n    matcher: (target, saveList, dataMap, dfsTransform, limitingDraft) => {\r\n      if (!Array.isArray(target)) return void 0;\r\n      const index = dataMap.findIndex((i) =>\r\n        limitingDraft ? ObjectControl.isEqual(i, target) : i === target\r\n      );\r\n      if (index !== -1) return index.toString();\r\n      const id = saveList.length;\r\n      saveList[id] = null;\r\n      dataMap[id] = target;\r\n      saveList[id] = target.map((i) => dfsTransform(i));\r\n      return id.toString();\r\n    },\r\n    replacer: (value, saveList) => {\r\n      return saveList[parseInt(value)];\r\n    },\r\n  },\r\n  {\r\n    name: 'object',\r\n    matcher: (target, saveList, dataMap, dfsTransform, limitingDraft) => {\r\n      if (!(target instanceof Object)) return void 0;\r\n      const index = dataMap.findIndex((i) =>\r\n        limitingDraft ? ObjectControl.isEqual(i, target) : i === target\r\n      );\r\n      if (index !== -1) return index.toString();\r\n      const id = saveList.length;\r\n      saveList[id] = {};\r\n      dataMap[id] = target;\r\n      for (const i in target) {\r\n        (saveList[id] as Record<string, unknown>)[i] = dfsTransform(\r\n          target[i as keyof typeof target]\r\n        );\r\n      }\r\n      return id.toString();\r\n    },\r\n    replacer: (value, saveList) => {\r\n      return saveList[parseInt(value)];\r\n    },\r\n  },\r\n];\r\nexport function parse(data: string): object {\r\n  function dfsTransform(target: unknown, dataList: unknown[]): unknown {\r\n    if (target instanceof Object) {\r\n      for (const i in target) {\r\n        (target as Record<string, unknown>)[i] = dfsTransform(\r\n          target[i as keyof typeof target],\r\n          dataList\r\n        );\r\n      }\r\n    } else if (typeof target === 'string') {\r\n      const result = /^(.*)::([a-zA-Z\\d]+)$/s.exec(target);\r\n      if (result) {\r\n        const [, data, type] = result;\r\n        let flag = false;\r\n        for (const i of specialValues) {\r\n          if (i.name === type) {\r\n            flag = true;\r\n            target = i.replacer(data, dataList);\r\n          }\r\n        }\r\n        if (!flag) {\r\n          console.warn('Invalid K-JSON data which has unknown type');\r\n        }\r\n      } else {\r\n        console.warn('Invalid K-JSON data which is string but could not be parsed');\r\n      }\r\n    }\r\n    return target;\r\n  }\r\n  try {\r\n    const dataList = JSON.parse(data);\r\n    if (!Array.isArray(dataList)) {\r\n      return dataList;\r\n    }\r\n    dfsTransform(dataList, dataList);\r\n    return dataList[0];\r\n  } catch {\r\n    throw new Error('Invalid K-JSON data');\r\n  }\r\n}\r\nexport function stringify(obj: object, limitingDraft: boolean = false): string {\r\n  const saveList: unknown[] = [];\r\n  const dataMap: unknown[] = [];\r\n  function dfsTransform(obj: unknown): unknown {\r\n    for (const i of specialValues) {\r\n      const result = i.matcher(obj, saveList, dataMap, dfsTransform, limitingDraft);\r\n      if (result !== void 0) {\r\n        return `${result}::${i.name}`;\r\n      }\r\n    }\r\n    return obj;\r\n  }\r\n  const result = dfsTransform(obj);\r\n  return saveList.length ? JSON.stringify(saveList) : JSON.stringify(result);\r\n}\r\n\r\nexport default Object.freeze(\r\n  Object.assign(Object.create(null), {\r\n    parse,\r\n    stringify,\r\n    toString: () => '[K-JSON object]',\r\n  })\r\n);\r\n", "import KJSON from '../src/KJSON';\r\nconst str = KJSON.stringify(1)\r\nconsole.log(str);\r\nconsole.log(\r\n  KJSON.parse(\r\n    `[{\"data\":\"1::object\"},{\"email\":\"2163826131@qq.com::string\",\"pwd\":\"ee17febe2de744f15b527c64830ad86a21b7d01bcde0b90b2028eeb91f037797d7e201dccd9815795ed22632893450c1623fd4bcdf633f30237b3249a476f7c9::string\"}]`\r\n  )\r\n);\r\nsetInterval(() => {}, 10000)"],
  "mappings": "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",
  "names": ["data", "obj", "result"]
}
